{
  listCommentsForActicle1: { @describe("all comments for article") @mixin("listCommentsForActicle")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "article.createArticleTrainDragon.res.body.article.slug", @eval
      },
    },
    res: {
      status: 200,
      body: {
        comments: [],
      }
    }
  },
  createCommentTrainDragon: { @describe("create comments") @mixin("createComment")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "article.createArticleTrainDragon.res.body.article.slug", @eval
      },
      body: {
        comment: {
          body: "Thank you so much!",
        }
      }
    },
    res: {
      status: 200,
      body: {
        comment: {
          id: 0, @type
          body: "req.body.comment.body", @query
          createdAt: "", @type
          author: {}, @type
        }
      }
    }
  },
  deleteComment1: { @describe("delete comments") @mixin("deleteComment")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "article.createArticleTrainDragon.res.body.article.slug", @eval
        id: "createCommentTrainDragon.res.body.comment.id", @eval
      },
    }
  }
}
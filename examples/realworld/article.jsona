{
  createArticleTrainDragon: { @describe("create article") @mixin("createArticle")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      body: {
        article: {
          title: "How to train your dragon",
          description: "Ever wonder how?",
          body: "Very carefully",
          tagList: ["dragons", "training"],
        }
      }
    },
    res: {
      status: 200,
      body: {
        article: {
          slug: "/^how-to-train-your-dragon/.test($)", @eval
          title: "req.body.article.title", @query
          description: "req.body.article.description", @query
          body: "req.body.article.body", @query
          createdAt: "", @type
          updatedAt: "", @type
          tagList: ["dragons", "training"],
          favorited: false,
          favoritesCount: 0,
          author: { @partial
            username: "auth.registerJohn.req.body.user.username", @query
            image: "", @type
            following: true,
          }
        }
      }
    }
  },
  getArticle1: { @describe("single article by slug") @mixin("getArticle")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "createArticleTrainDragon.res.body.article.slug", @eval
      }
    },
    res: {
      status: 200,
      body: {
        article: {
          slug: "/^how-to-train-your-dragon/.test($)", @eval
          title: "createArticleTrainDragon.req.body.article.title", @query
          description: "createArticleTrainDragon.req.body.article.description", @query
          body: "createArticleTrainDragon.req.body.article.body", @query
          createdAt: "", @type
          updatedAt: "", @type
          tagList: ["dragons", "training"],
          favorited: false,
          favoritesCount: 0,
          author: { @partial
            username: "auth.registerJohn.req.body.user.username", @query
            image: "", @type
            following: true,
          }
        }
      }
    }
  },
  updateArticleTrainDragon: { @describe("update article") @mixin("updateArticle")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "createArticleTrainDragon.res.body.article.slug", @eval
      },
      body: {
        article: {
          body: "With two hands"
        }
      }
    },
    res: {
      status: 200,
      body: {
        article: { @partial
          body: "req.body.article.body", @query
        }
      }
    }
  },
  favoriteArticle1: { @describe("favorite article") @mixin("favoriteArticle")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "createArticleTrainDragon.res.body.article.slug", @eval
      },
    },
    res: {
      status: 200,
      body: {
        article: { @partial
          favorited: true,
          favoritesCount: 1,
        }
      }
    }
  },
  unfavoriteArticle1: { @describe("unfavorite article") @mixin("unfavoriteArticle")
    req: {
      header: {
        Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
      },
      params: {
        slug: "createArticleTrainDragon.res.body.article.slug", @eval
      },
    },
    res: {
      status: 200,
      body: {
        article: { @partial
          favorited: false,
          favoritesCount: 0,
        }
      }
    }
  },
  listArticlesWithAuth: { @describe("article with auth") @group
    listArticles1: { @describe("all articles") @mixin("listArticles")
      req: {
        header: {
          Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
        }
      },
      res: {
        status: 200,
        body: {
          articles: [ @partial
            { @partial
              slug: "/^how-to-train-your-dragon/.test($)", @eval
            }
          ],
          articlesCount: 0, @type
        }
      }
    },
    listArticles2: { @describe("articles by author") @mixin("listArticles")
      req: {
        header: {
          Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
        },
        query: {
          author: "auth.registerJohn.req.body.user.username", @eval
        }
      },
      res: {
        status: 200,
        body: { @partial
          articlesCount: "$ >= 1" @eval
        }
      }
    },
    listArticles3: { @describe("articles favorited by username") @mixin("listArticles")
      req: {
        header: {
          Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
        },
        query: {
          favorited: true
        }
      },
      res: {
        status: 200,
        body: { @partial
          articles: [],
          articlesCount: 0
        }
      }
    },
    listArticles4: { @describe("articles by tag") @mixin("listArticles")
      req: {
        header: {
          Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
        },
        query: {
          tag: "dragons"
        }
      },
    },
  },
  listArticlesWithoutAuth: { @describe("all articles") @group
    listArticles1: { @describe("all articles") @mixin("listArticles")
      res: {
        status: 200,
        body: { @partial
          articles: [ @partial
            {
              slug: "createArticleTrainDragon.res.body.article.slug", @query
              title: "createArticleTrainDragon.res.body.article.title", @query
              description: "createArticleTrainDragon.res.body.article.description", @query
              body: "updateArticleTrainDragon.req.body.article.body", @query
              createdAt: "", @type
              updatedAt: "", @type
              tagList: ['dragons', 'training'],
              favorited: false,
              favoritesCount: 0,
              author: { @partial
                username: "auth.registerJohn.req.body.user.username", @query
                image: "", @type
                following: false,
              },
            }
          ]
        }
      }
    }
  },
  articleFeed: { @describe("article feed") @group
    getFeed1: { @describe("john feed") @mixin("getFeed")
      req: {
        header: {
          Authorization: `"Token " + auth.loginJohn.res.body.user.token` @eval
        },
      },
      res: {
        status: 200,
        body: {
          articles: `$.length > 0`, @eval
          articlesCount: `$ > 0`, @eval
        }
      }
    }
  }
}
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`res data 1`] = `
"module main
  fail# value not equal ✘
  fail# nest value not equal ✘
  fail# value type not equal ✘
  fail# object prop length not equal ✘
  fail# array elem length not equal ✘

1. fail# value not equal(main.test1)
   main.test1.res.v1: 2 ≠ 3

2. fail# nest value not equal(main.test2)
   main.test2.res.v1.v2.v3: b ≠ a

3. fail# value type not equal(main.test3)
   main.test3.res.v1: type integer ≠ type string

4. fail# object prop length not equal(main.test4)
   main.test4.res.v1: keys length 1 ≠ 2

5. fail# array elem length not equal(main.test5)
   main.test5.res.v1: elements length 1 ≠ 2

"
`;

exports[`res eval 1`] = `
"module main
  @eval return true passes test ✔
  fail# @eval return false fails test ✘
  @eval return value equal ✔

1. fail# @eval return false fails test(main.test2)
   main.test2.res.v1@eval: eval expr fail

"
`;

exports[`res every 1`] = `
"module main
  @every ✔
  fail# @every ✘
  fail# @every must be array value ✘

1. fail# @every(main.test2)
   main.test2.res.v1@every: some test fail
     main.test2.res.v1.0@eval: eval expr fail

2. fail# @every must be array value(main.test3)
   main.test3.res.v1@every: should have array value

"
`;

exports[`res partial 1`] = `
"module main
  @partial for object ✔
  @partial for array ✔

"
`;

exports[`res some 1`] = `
"module main
  @some ✔
  fail# @some ✘
  fail# @some must be array value ✘

1. fail# @some(main.test2)
   main.test2.res.v1@some: no test pass
     main.test2.res.v1.0@eval: eval expr fail
     main.test2.res.v1.1@eval: eval expr fail

2. fail# @some must be array value(main.test3)
   main.test3.res.v1@some: should have array value

"
`;

exports[`res type 1`] = `
"module main
  @type ✔
  @type null ✔
  fail# @type ✘

1. fail# @type(main.test3)
   main.test3.res.v1@type: type float ≠ type integer

"
`;
